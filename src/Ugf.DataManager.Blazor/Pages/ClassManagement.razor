@page "/class"

@using Ugf.DataManager.ClassManagement
@using Secyud.Ugf
@inherits AbpCrudPageBase<IClassContainerAppService, ClassContainerDto, Guid, GetClassListInput>
@inject AbpBlazorMessageLocalizerHelper<DataManagerResource> Lh

<Card>
    <CardHeader>
        @* ************************* PAGE HEADER ************************* *@
        <PageHeader Title="@L["Classes"]"
                    BreadcrumbItems="@BreadcrumbItems"
                    Toolbar="@Toolbar">
        </PageHeader>
    </CardHeader>
    <CardBody>
        <Fields>
            <Field ColumnSize="ColumnSize.Is6">
                <Autocomplete TItem="Tuple<string, Guid>" TValue="Guid" Data="U.Tm.GetChildrenOfBaseType()"
                              TextField="u => u.Item1" ValueField="u => u.Item2"
                              @bind-SelectedValue="@GetListInput.ClassId" Placeholder="@L["BaseClass"]"/>

            </Field>
            <Field ColumnSize="ColumnSize.Is6">
                <Addons>
                    <Addon AddonType="AddonType.Body">
                        <TextEdit @bind-Text="@GetListInput.Name" Placeholder="@L["Name"]"/>
                    </Addon>
                    <Addon AddonType="AddonType.End">
                        <Button Clicked="SearchEntitiesAsync" Color="Color.Secondary">@L["Search"]</Button>
                    </Addon>
                </Addons>
            </Field>
        </Fields>
        @* ************************* DATA GRID ************************* *@
        <AbpExtensibleDataGrid TItem="ClassContainerDto"
                               Data="@Entities"
                               ReadData="@OnDataGridReadAsync"
                               TotalItems="@TotalCount"
                               ShowPager="true"
                               PageSize="@PageSize"
                               CurrentPage="@CurrentPage"
                               Columns="@ClassManagementTableColumns">
        </AbpExtensibleDataGrid>
    </CardBody>
</Card>

<Modal @ref="EditModal" Closing="@ClosingEditModal">
    <ModalContent Size="ModalSize.ExtraLarge" Centered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["Edit"]</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                    <Field ColumnSize="ColumnSize.Is8">
                        <FieldLabel>@L["Name"]</FieldLabel>
                        <TextEdit @bind-Text="EditingEntity.Name" ReadOnly/>
                    </Field>
                    <Field ColumnSize="ColumnSize.Is4">
                        <Button Clicked="RefreshClassProperty">@L["RefreshProperty"]</Button>
                    </Field>
                    <Field ColumnSize="ColumnSize.Is12">
                        <FieldLabel>@L["Description"] </FieldLabel>
                        <MemoEdit @bind-Text="@EditingEntity.Description"/>
                    </Field>
                    <DataGrid TItem="ClassPropertyDto" PageSize="4" ShowPager
                              Data="EditingProperties">
                        <DataGridColumns>
                            <DataGridColumn TItem="ClassPropertyDto" Caption="@L["PropertyName"]" Sortable
                                            Field="@nameof(ClassPropertyDto.PropertyName)"/>

                            <DataGridColumn TItem="ClassPropertyDto" Caption="@L["Name"]" Sortable
                                            Field="@nameof(ClassPropertyDto.Name)">
                                <DisplayTemplate>
                                    <TextEdit @bind-Text="@context.Name"/>
                                </DisplayTemplate>
                            </DataGridColumn>

                            <DataGridColumn TItem="ClassPropertyDto" Field="@nameof(ClassPropertyDto.Description)"
                                            Caption="@L["Description"]" Sortable="false">
                                <DisplayTemplate>
                                    <MemoEdit @bind-Text="@context.Description" Rows="1"/>
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn TItem="ClassPropertyDto" Field="@nameof(ClassPropertyDto.Style)"
                                            Caption="@L["EditStyle"]" Sortable="false">
                                <DisplayTemplate>
                                    <Select TValue="EditStyle" @bind-SelectedValue="context.Style">
                                        <SelectItem Value="EditStyle.Default">@L["Default"]</SelectItem>
                                        <SelectItem Value="EditStyle.FlagOrMemo">@L["FlagOrMemo"]</SelectItem>
                                    </Select>
                                </DisplayTemplate>
                            </DataGridColumn>
                        </DataGridColumns>
                    </DataGrid>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                <SubmitButton Clicked="@UpdateEntityAsync"/>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>


<Modal @ref="CreateModal" Closing="@ClosingCreateModal">
    <ModalContent Size="ModalSize.ExtraLarge" Centered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["Create"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Field ColumnSize="ColumnSize.Is6">
                        <Autocomplete TItem="Tuple<string, Guid>" TValue="Guid" Data="U.Tm.GetChildrenOfBaseType()"
                                      TextField="u => u.Item1" ValueField="u => u.Item2"
                                      @bind-SelectedValue="@NewEntity.Id" Placeholder="@L["Class"]"/>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <SubmitButton Clicked="@CreateEntityAsync"/>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>