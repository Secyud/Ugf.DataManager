@page "/object"

@using Ugf.DataManager.ClassManagement
@using Ugf.DataManager.Blazor.Pages.FieldComponents
@using Secyud.Ugf
@inherits AbpCrudPageBase<ISpecificObjectAppService, SpecificObjectDto, Guid, GetObjectListInput>
@inject AbpBlazorMessageLocalizerHelper<DataManagerResource> Lh

<Card>
    <CardHeader>
        @* ************************* PAGE HEADER ************************* *@
        <PageHeader Title="@L["Objects"]"
                    BreadcrumbItems="@BreadcrumbItems"
                    Toolbar="@Toolbar">
        </PageHeader>
    </CardHeader>
    <CardBody>
        <Fields>
            <Field ColumnSize="ColumnSize.Is12">
                <Autocomplete TItem="Tuple<string, Guid>" TValue="Guid" Data="U.Tm.SubTypes()"
                              TextField="u => u.Item1" ValueField="u => u.Item2"
                              @bind-SelectedValue="@GetListInput.ClassId" Placeholder="@L["BaseClass"]"/>

            </Field>
            <Field ColumnSize="ColumnSize.Is6">
                <TextEdit @bind-Text="@GetListInput.Name" Placeholder="@L["Name"]"/>
            </Field>
            <Field ColumnSize="ColumnSize.Is6">
                <Addons>
                    <Addon AddonType="AddonType.Body">
                        <NumericEdit @bind-Value="@GetListInput.BundleId" Placeholder="@L["BundleName"]"/>
                    </Addon>
                    <Addon AddonType="AddonType.End">
                        <Button Clicked="GetEntitiesAsync" Color="Color.Secondary">@L["Search"]</Button>
                    </Addon>
                </Addons>
            </Field>
        </Fields>
        @* ************************* DATA GRID ************************* *@
        <AbpExtensibleDataGrid TItem="SpecificObjectDto"
                               Data="@Entities"
                               ReadData="@OnDataGridReadAsync"
                               TotalItems="@TotalCount"
                               ShowPager="true"
                               PageSize="@PageSize"
                               CurrentPage="@CurrentPage"
                               Columns="@ObjectManagementTableColumns">
        </AbpExtensibleDataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateModal" Closing="@ClosingCreateModal">
    <ModalContent Centered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewObject"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Field>
                        <FieldLabel>@L["Class"]</FieldLabel>
                        <Autocomplete TItem="Tuple<string, Guid>" TValue="Guid" Data="U.Tm.SubTypes()"
                                      TextField="u => u.Item1" ValueField="u => u.Item2"
                                      @bind-SelectedValue="@NewEntity.ClassId"/>

                    </Field>
                    <Validation MessageLocalizer="@Lh.Localize">
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Name" Autofocus="true">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["BundleName"]</FieldLabel>
                        <NumericEdit @bind-Value="@NewEntity.BundleId"/>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <SubmitButton Clicked="@CreateEntityAsync"/>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="EditModal" Closing="@ClosingEditModal">
    <ModalContent Centered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["Edit"]</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                    <Field>
                        <FieldLabel>@L["Class"]</FieldLabel>
                        <Autocomplete TItem="Tuple<string, Guid>" TValue="Guid" Data="U.Tm.SubTypes()"
                                      TextField="u => u.Item1" ValueField="u => u.Item2"
                                      @bind-SelectedValue="@EditingEntity.ClassId"/>

                    </Field>
                    <Validation MessageLocalizer="@Lh.Localize">
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit @bind-Text="EditingEntity.Name" Autofocus="true">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Bundle"]</FieldLabel>
                        <NumericEdit @bind-Value="@EditingEntity.BundleId"/>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                <SubmitButton Clicked="@UpdateEntityAsync"/>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="ObjectDataModal" Closing="@CloseObjectDataModal">
    <ModalContent Size="ModalSize.ExtraLarge" Centered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["SetData"]</ModalTitle>
                <CloseButton Clicked="CloseObjectDataModalAsync"/>
            </ModalHeader>
            <ModalBody>
                @if (EditingObject is not null &&
                     ClassContainer is not null)
                {
                    <Fields>
                        <Field ColumnSize="ColumnSize.Is12">
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="EditingEntity.Name"/>
                        </Field>
                        <Field ColumnSize="ColumnSize.Is12">
                            <FieldLabel>@L["Class"]</FieldLabel>
                            <TextEdit @bind-Text="ClassContainer.Name" ReadOnly/>
                        </Field>
                        <Field ColumnSize="ColumnSize.Is12">
                            <FieldLabel>@L["Description"]</FieldLabel>
                            <MemoEdit @bind-Text="ClassContainer.Description" ReadOnly/>
                        </Field>
                        <Field ColumnSize="ColumnSize.Is12">
                            <FieldLabel>@L["Bundle"]</FieldLabel>
                            <NumericEdit @bind-Value="@EditingEntity.BundleId"/>
                        </Field>
                        <ObjectViewer ViewObject="EditingObject"/>
                    </Fields>
                }
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseObjectDataModalAsync">@L["Cancel"]</Button>
                <SubmitButton Clicked="@UpdateObjectDataAsync"/>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>