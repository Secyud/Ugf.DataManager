@typeparam TValue where TValue :struct 

<TextEdit Text="@Convert.ToString(Convert.ToInt64(Value) ,2)"
          TextChanged="SetValue" MaskType="MaskType.RegEx" 
          EditMask="^[0-1]*$" />

@code
{
    [Parameter] public TValue Value { get; set; }
    
    [Parameter] public EventCallback<TValue> ValueChanged { get; set; }

    private async Task SetValue(string valueText)
    {
        try
        {
            Value = (TValue)Convert.ChangeType(Convert.ToInt64(valueText,2),typeof(TValue)) ;
        }
        catch (Exception)
        {
            // ignored
        }
        await ValueChanged.InvokeAsync(Value);
        StateHasChanged();
    }

}
